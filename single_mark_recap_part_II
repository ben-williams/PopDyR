---
title: "Lab 2. Single Mark-Release Experiment , Part II"
author: ""
date: ""
output: html_document
---

**Setup data**  
*These values can be changed and the subsequent methods simply rerun.*
```{r}
n1 <- 2000
n2 <- 1000
m2 <- 80
```

Calculations
```{r}
N.hat <- n1 * n2/m2
v.m2 <- m2 * N.hat/(N.hat - 1) * (1 - n1/N.hat) * (1 - n2/N.hat)
se.m2 <- sqrt(v.m2)
N.star <- ((n1 + 1) * (n2 + 1)/(m2 + 1)) - 1
v.star <- (n1 + 1) * (n2 + 1) * (n1 - m2) * (n2 - m2)/(((m2 + 1)^2) * (m2 + 
    2))
se.star <- sqrt(v.star)
cv.star <- (se.star/N.star) * 100
```
Next examine confidence intervals using different methods

**Method 1: 95% CI about N using N***
```{r}
m1.lci <- N.star - 1.96 * se.star
m1.uci <- N.star + 1.96 * se.star
```
**Method 2: 95% CI about m2 using with inverted limits**
```{r}
m2.lci <- n1 * n2/(m2 + 1.96 * se.m2)
m2.uci <- n1 * n2/(m2 - 1.96 * se.m2)
```
**Method 3: MLE**
```{r}
N <- c(10000:40000)  # Set the range of N to be used
L <- dhyper(m2, n1, N - n1, n2)  # Generate a likelihood
plot(N, L, type = "l")

fn <- function(N) {
    -dbinom(m2, n1, n2/N)
}
binom <- optimize(fn, c(20000, 30000))  # Know from the Likelihood figure that the population estimate is somewhere between 20000-30000, optimize between these points (change for different population estimates).
bm <- binom$minimum  # MLE population estimate
abline(v = bm)

plot(N, log(L), type = "l", ylab = "L (N|80)")

fn <- function(x) log(dbinom(m2, size = n1, prob = n2/x)) - (max(log(L)) - 1.92)
lci <- uniroot(fn, lower = bm - 10000, upper = bm)  # confidence intervals optimized on a reasonable range below N*
m3.lci <- lci[1]
uci <- uniroot(fn, lower = bm, upper = bm + 20000)  # confidence intervals optimized on a reasonable range above N*
m3.uci <- uci[1]
abline(v = c(lci[1], uci[1]))
points(binom$minimum, max(log(L)), pch = 19, cex = 3)
```

**Method 4: 95% CI about p^ (inverted limits)**
```{r}
p.hat <- m2/n2
f.hat <- m2/n1
part1 <- 1.96 * (sqrt(((1 - f.hat) * p.hat * (1 - p.hat))/(n2 - 1))) + (1/(2 * 
    n2))
m4.lci <- n1/(p.hat + part1)
m4.uci <- n1/(p.hat - part1)
```

**Method 5: Normal approximation**
```{r}
lci <- function(m5.lci) {
    ((m2 - (n1 * n2/m5.lci))^2/((n1 * n2/m5.lci) * (1 - n1/m5.lci) * ((m5.lci - 
        n2)/(m5.lci - 1)))) - 1.96^2
}
m5.lci <- uniroot(lci, c(bm - 10000, bm))$root

uci <- function(m5.uci) {
    ((m2 - (n1 * n2/m5.uci))^2/((n1 * n2/m5.uci) * (1 - n1/m5.uci) * ((m5.uci - 
        n2)/(m5.uci - 1)))) - 1.96^2
}
m5.uci <- uniroot(uci, c(bm, bm + 20000))$root
```

Plot the methods
```{r}
plot(1:5, rep(N.star, 5), pch = 19, ylab = "Estimate", xlab = "Method", ylim = c(15000, 
    35000))
points(1:5, c(m1.lci, m2.lci, m3.lci, m4.lci, m5.lci))
points(1:5, c(m1.uci, m2.uci, m3.uci, m4.uci, m5.uci))
lines(c(1, 1), c(m1.lci, m1.uci))
lines(c(2, 2), c(m2.lci, m2.uci))
lines(c(3, 3), c(m3.lci, m3.uci))
lines(c(4, 4), c(m4.lci, m4.uci))
lines(c(5, 5), c(m5.lci, m5.uci))
```

```{r}
sessionInfo()
```


This is a lab exercise from Dr. Terry Quinn  
at the University of Alaska Fairbanks  
and has been worked up in R by:  
Ben Williams  
bcwilliams2@alaska.edu  
ben.williams@alaska.gov
